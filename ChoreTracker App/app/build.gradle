apply plugin: 'com.android.application'
apply plugin: 'com.amazonaws.appsync' // REQUIRED

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.myapplication"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner getInstrumentation(project)
    }
    buildTypes {
        debug {
            buildConfigField 'String', 'TEST_TAGS', '"' + getTestTags() + '"'
            buildConfigField 'String', 'TEST_SCENARIO', '"' + getTestScenario() + '"'
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //AppSync SDK
    implementation 'com.amplifyframework:aws-api:0.10.0'
    implementation 'com.amazonaws:aws-android-sdk-appsync:2.9.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    // Mobile Client for initializing the SDK
    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.16.11'
    implementation 'com.amazonaws:aws-android-sdk-core:2.16.11'
    implementation 'com.amazonaws:aws-android-sdk-auth-core:2.16.11@aar'
    implementation 'com.amazonaws:aws-android-sdk-pinpoint:2.6.0'
    implementation ('com.amazonaws:aws-android-sdk-auth-ui:2.7.7@aar') { transitive = true }
    implementation 'com.amazonaws:aws-android-sdk-auth-userpools:2.16.11'
    implementation 'com.amazonaws:aws-android-sdk-cognitoidentityprovider:2.16.11'
    implementation 'com.amazonaws:aws-android-sdk-ddb:2.16.8'
    implementation 'com.amazonaws:aws-android-sdk-ddb-document:2.16.8'
    implementation 'com.amazonaws:aws-android-sdk-cognitoauth:2.16.11'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.16.8'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.riontech:calendar:1.0'
    androidTestImplementation 'info.cukes:cucumber-android:1.2.5'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.5'

    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:'3.1.1'"

    androidTestImplementation "androidx.test:runner:'1.1.1'"
    androidTestImplementation "androidx.test.ext:junit:'1.1.1'"

    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    androidTestImplementation "io.cucumber:cucumber-android:4.3.1"
    //For AWSMobileClient only:
    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.16.11'

    //For the drop-in UI also:
    implementation 'com.amazonaws:aws-android-sdk-auth-userpools:2.16.11'
    implementation 'com.amazonaws:aws-android-sdk-auth-ui:2.16.11'

    //For hosted UI also:
    implementation 'com.amazonaws:aws-android-sdk-cognitoauth:2.16.11'

    androidTestImplementation 'info.cukes:cucumber-android:1.2.5'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.5'


}

static def getInstrumentation(Project project) {
    project.hasProperty('cucumber') ? "com.example.runner.CucumberTestRunner" : "androidx.support.tes.runner.AndroidJUnitRunner"
}

def getTestTags() {
    project.getProperties().get('tags') ?: ''
}

def getTestScenario() {
    project.getProperties().get('scenario') ?: ''
}


